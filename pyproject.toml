[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "pybind11>=2.4"
]
build-backend = "setuptools.build_meta"

[project]
name = 'dscribe'
version = '2.1.1'
description = 'A Python package for creating feature transformations in applications of machine learning to materials science.'
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
dependencies = [
    "numpy",
    "scipy",
    "ase>=3.19.0",
    "scikit-learn",
    "joblib>=1.0.0",
    "sparse",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS",
    "Operating System :: Unix",
    "Programming Language :: C",
    "Programming Language :: C++",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
]
keywords = ['descriptor', 'machine learning', 'atomistic structure', 'materials science']

[project.urls]
Documentation = 'https://singroup.github.io/dscribe/latest/'
Source = "https://singroup.github.io/dscribe"

[project.optional-dependencies]
dev = [
    "coverage",
    "ruff",
    "coveralls",
    "pymatgen",
    "sphinx",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex",
    "pytest",
]

[tool.setuptools.packages.find]
include = ["dscribe*"]
exclude = ["tests*"]

[tool.ruff]
include = ["dscribe/*.py", "tests/*.py"]

# Same as Black
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "PL", # pylint
]
ignore = [
    "E501", # Line too long ({width} > {limit} characters)
    "E701", # Multiple statements on one line (colon)
    "E731", # Do not assign a lambda expression, use a def
    "E402", # Module level import not at top of file
    "E741", # Ambiguous variable name
    "W605", # Invalid escape sequence
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used instead of constant
    "PLW0603", # Using the global statement
    "PLW2901", # redefined-loop-name
    "PLR1714", # consider-using-in
    "PLR5501", # else-if-used
]
fixable = ["ALL"]

[tool.ruff.format]
# indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
